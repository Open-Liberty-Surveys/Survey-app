plugins {
    id 'net.wasdev.wlp.gradle.plugins.Liberty' version '2.6.5'
    id 'war'
    id "com.moowork.node" version "1.3.1"
    //id 'org.ysb33r.nodejs.base' version '0.6.2'
    //id 'org.ysb33r.nodejs.npm' version '0.6.2'
}

version = '1.0-SNAPSHOT'

description = "SurveyMe front end"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}
dependencies {
    providedCompile group:'javax.servlet', name:'javax.servlet-api', version:'4.0.1'
    libertyRuntime group:'io.openliberty', name:'openliberty-runtime', version:'[19.0.0.11,)'
}

ext {
    appName = project.name
    testServerHttpPort = 8080
    testServerHttpsPort = 9443
    warContext = '/'
}

liberty {
    server {
        name = "${appName}Server"
        configFile = file("src/main/liberty/config/server.xml")
        bootstrapProperties = ['default.http.port': testServerHttpPort,
                               'default.https.port': testServerHttpsPort,
                               'app.context.root': warContext]
        packageLiberty {
            archive = "$buildDir/${appName}.zip"
            include = "usr"
        }
    }
}

war {
    dependsOn 'cpySrc'
    archiveName = "${baseName}.${extension}"
    webAppDir = new File("npm_build/src")
    webAppDirName = "npm_build/src"
    println ("WebAppDir "+getWebAppDir())
    println ("WebAppDirName "+getWebAppDirName())
    
}
node {
    version = '12.13.0'
    npmVersion '6.12.0'
    download = true
}
task npmBuild (type: NpmTask) {
    npmCommand = 'run'
    args = ['--prod']
}
task ngBuild(type: NpmTask) {
   args = ['run', 'build', '--prod']
}

task cpySrc (type: Copy) {
    dependsOn 'npm_build'
    from 'src/main/webapp/dist/webapp/'
    into 'npm_build'
    outputs.dir("npm_build/src")
}
task url {
    doLast {println frontendURL + '/login'}
}
gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(":front-end-ui:libertyStart")) {
        libertyStart.doLast {
            println ("Application should be running on ${frontendURL}")
        }
    }
}

build.dependsOn 'npm_build'
build.finalizedBy 'libertyCreate'

clean.dependsOn 'libertyStop'
libertyPackage.dependsOn 'libertyStop'
