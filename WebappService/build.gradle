// tag::war[]
apply plugin: 'war'
// end::war[]
// tag::liberty[]
apply plugin: 'liberty'
//end::liberty[]
// tag::group[]
group = 'io.openliberty.guides'
// end::group[]
// tag::version[]
version = '1.0-SNAPSHOT'
// end::version[]
// tag::description[]
description = "Gradle guide"
// end::description[]

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// tag::buildscript[]
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        //tag::liberty-dependency[]
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.6.3'
        //end::liberty-dependency[]
    }
}
// end::buildscript[]

// tag::repositories[]
repositories {
    mavenCentral()
}
// end::repositories[]

// tag::dependencies[]
dependencies {
    //tag::providecompile[]
    providedCompile group:'javax.servlet', name:'javax.servlet-api', version:'4.0.1'
    //end::providecompile[]
    //tag::testcompile[]
    //tag::commons[]
    //tag::libertyruntime[]
    libertyRuntime group:'io.openliberty', name:'openliberty-runtime', version:'[17.0.0.4,)'
    //end::libertyruntime[]
}
// end::dependencies[]

// tag::ext[]
ext {
    appName = project.name
    testServerHttpPort = 8080
    testServerHttpsPort = 9443
    warContext = appName
}
// end::ext[]

// tag::liberty2[]
liberty {
    server {
        //tag::name[]
        name = "${appName}Server"
        //end::name[]
        //tag::configfile[]
        configFile = file("src/main/liberty/config/server.xml")
        //end::configfile[]
        //tag::bootstrapproperties[]
        bootstrapProperties = ['default.http.port': testServerHttpPort,
                               'default.https.port': testServerHttpsPort,
                               'app.context.root': warContext]
        //end::bootstrapproperties[]
        //tag::packageliberty[]
        packageLiberty {
            archive = "$buildDir/${appName}.zip"
            include = "usr"
        }
        //end::packageliberty[]
    }
}
// end::liberty2[]

// tag::war2[]
war {
    archiveName = "${baseName}.${extension}"
}
// end::war2[]

// tag::depends[]
clean.dependsOn 'libertyStop'
libertyPackage.dependsOn 'libertyStop'
// end::depends[]
// end::whole[]
